<script src="https://d3js.org/d3.v5.js"></script>

<script src="https://d3js.org/d3-array.v1.min.js"></script>
<script src="https://d3js.org/d3-collection.v1.min.js"></script>
<script src="https://d3js.org/d3-color.v1.min.js"></script>
<script src="https://d3js.org/d3-format.v1.min.js"></script>
<script src="https://d3js.org/d3-interpolate.v1.min.js"></script>
<script src="https://d3js.org/d3-time.v1.min.js"></script>
<script src="https://d3js.org/d3-time-format.v2.min.js"></script>
<script src="https://d3js.org/d3-scale.v2.min.js"></script>
<h1>
    demo of d3
</h1>
<svg>
    <text x=10 y=10>bubble</text>
</svg>

<style>
    svg {
        width: 1000px;
        height: 1000px;
    }
</style>

<script>
    var x = d3.scaleLinear()
        .domain([0, 180])
        .range([0, 250]);
    var y = d3.scaleLinear()
        .domain([0, 150])
        .range([200, 0]);

    var xAxis = d3.axisBottom().scale(x);
    var yAxis = d3.axisLeft().scale(y);

    var svg = d3.select('svg');


    svg.append('g')
        .attr('transform', 'translate(50,200)')
        .call(xAxis);

    svg.append('g')
        .attr('transform', 'translate(50,0)')
        .call(yAxis);

        var dataset = [
    [2001, [{
        'height': 170,
        'weight': 70,
    }, {
        'height': 160,
        'weight': 50,
    }, {
        'height': 180,
        'weight': 70,
    }, {
        'height': 180,
        'weight': 80,
    }, {
        'height': 100,
        'weight': 40,
    }, ]],
    [2002, [{
        'height': 170,
        'weight': 70,
    }, {
        'height': 160,
        'weight': 50,
    }, {
        'height': 180,
        'weight': 70,
    }, {
        'height': 180,
        'weight': 80,
    }, {
        'height': 120,
        'weight': 80,
    }, ]],
    [2003, [{
        'height': 180,
        'weight': 70,
    }, {
        'height': 170,
        'weight': 50,
    }, {
        'height': 190,
        'weight': 70,
    }, {
        'height': 200,
        'weight': 80,
    }, {
        'height': 130,
        'weight': 80,
    }, ]],
    ]
    var data = [{
        'height': 170,
        'weight': 60,
    }, {
        'height': 160,
        'weight': 70,
    }, {
        'height': 180,
        'weight': 65,
    }, {
        'height': 120,
        'weight': 50,
    }];

    var data2 = [{
        'height': 150,
        'weight': 60,
    }, {
        'height': 180,
        'weight': 100,
    }, {
        'height': 100,
        'weight': 65,
    }, {
        'height': 120,
        'weight': 50,
    }];

    var frameHeight = 150;

    svg
        .selectAll('circle')
        .data(dataset[0][1])
        .enter()
        .append('circle')
        .attr('cx', function(d) {
            return x(d['height']);
        })
        .attr('cy', function(d) {
            return y((frameHeight - d['weight']) * 1.2);
        })
        .attr('r', function(d) {
            return Math.sqrt(d['weight']);
        })
        .attr('fill', '#ff0000');

        
var keySnapshot = 0;
d3.interval(function(){
    keySnapshot = (keySnapshot +1) % dataset.length;
    svg
        .selectAll('circle')
        .data(dataset[2][1])
        .transition()
        // .duration(2000)
        .attr('cx', function(d) {
            return x(d['height']);
        })
        .attr('cy', function(d) {
            return y(d['weight']);
        })
        .attr('r', function(d) {
            return d['weight']/ 10;
        })
        .attr('fill', '#ff6880');
},500)

    // var frameHeight = 150;
    // for (i = 0; i < data.length; i++) {
    //     var x = data[i]['height'];
    //     var y = frameHeight - data[i]['weight'];
    //     svg.append('circle').attr('cx', x).attr('cy', y).attr('r', 5);

    // }


    // svg.append('circle').attr('cx', data[1]['height']).attr('cy', data[1]['weight']).attr('r', 10);
    // svg.append('circle').attr('cx', data[2]['height']).attr('cy', data[2]['weight']).attr('r', 10);
    // svg.append('circle').attr('cx', data[3]['height']).attr('cy', data[3]['weight']).attr('r', 10);
</script>
